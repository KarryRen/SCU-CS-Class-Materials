#!/bin/bash

###############################
# 脚本名称 : userManager.sh     #
# 脚本功能 : 用户管理                #	
# 作    者 : RenKai	           #	
# 版    本 : v1.0	     	     #	
###############################


menu() {
	echo "*************************"
	echo "****** 1 新建用户 *********"
	echo "****** 2 删除用户 *********"
	echo "****** 3 修改用户 *********"
	echo "****** 4 查找用户 *********"
	echo "****** 0 退出系统 *********"
	echo "*************************"
}

#################################################################################
create_one_user(){
# 根据三个参数（user_name, user_pwd, user_grp） 来创建一个用户
	# echo "The number of parameters is: ${#}" # 查看参数数目
	user_name="$1"
	user_pwd="$2"
	user_grp="$3"

	egrep "^$user_grp" /etc/group >& /dev/null # 判断组是否存在
	if [ $? != 0 ]
	then
		echo "$user_grp 原本不存在现在添加该组"
    		groupadd $group
	fi
	
	egrep "^$user_name" /etc/passwd >& /dev/null # 判断用户是否存在
	if [ $? != 0 ]
	then
		useradd -g $user_grp $user_name
		echo "$user_pwd" | passwd --stdin "$user_name" # 设置密码
		if [ "$?" == 0 ];
		   then
			echo "----用户已经创建成功-------"
		fi
	else
		echo "----$user_name 用户已经存在啦------"
	fi
}
create_users_from_file() {
# 本函数用来从文件中批量创建用户
	echo "输入含有要创建用户信息的文件名称："
	read file_name
	
	cat $file_name | while read rows; do
		str=$rows
		OLD_IFS="$IFS"
		IFS=":;"	# 重新设置区域分隔符
		arr=($str)	# 将一行字符串拆分成数组
		IFS=$OLD_IFS
		user_name=${arr[1]}
		user_pwd=${arr[3]}
		user_grp=${arr[5]}
		create_one_user "$user_name" "$user_pwd" "$user_grp"
	done
}

#################################################################################
delete_one_user(){
# 根据一个参数（user_name） 来删除一个用户
	# echo "The number of parameters is: ${#}" # 查看参数数目
	user_name="$1"
	
	egrep "^$user_name" /etc/passwd >& /dev/null # 判断用户是否存在
	if [ $? != 0 ]
	then
		echo "----$user_name 用户不存在啦-----------"
	else
		userdel -f -r $user_name
		if [[ "$?" == 0  ]];
		then
			echo "----用户已经删除成功------"
		fi
	fi
	
}

delete_users_from_file() {
# 本函数用来从文件中批量删除用户
	echo "输入含有要删除用户信息的文件名称："
	read file_name
	
	cat $file_name | while read rows; do
		str=$rows
		OLD_IFS="$IFS"
		IFS=":;"	# 重新设置区域分隔符
		arr=($str)	# 将一行字符串拆分成数组
		IFS=$OLD_IFS
		user_name=${arr[1]}
		delete_one_user "$user_name" 
	done
}

#################################################################################
change_one_user(){
# 根据三个参数（user_name, user_grp） 来修改一个用户
	# echo "The number of parameters is: ${#}" # 查看参数数目
	user_name="$1"
	change_user_grp="$2"

	egrep "^$user_name" /etc/passwd >& /dev/null # 判断用户是否存在
	if [ $? != 0 ]
	then
			## 修改组别
			usermod -g  $change_user_grp  $user_name
			echo "----组别修改成功！！！-------"
	else
		echo "----$user_name 用户不存在 没办法修改哦------"
	fi
}
change_users_from_file() {
# 本函数用来从文件中批量创建用户
	echo "输入含有要修改用户信息的文件名称："
	read file_name
	cat $file_name | while read rows; do
		str=$rows
		OLD_IFS="$IFS"
		IFS=":;"	# 重新设置区域分隔符
		arr=($str)	# 将一行字符串拆分成数组
		IFS=$OLD_IFS
		user_name=${arr[1]}
		user_grp=${arr[3]}
		change_one_user "$user_name" "$user_grp"
	done
}

#################################################################################
find_one_user(){
# 根据一个参数（user_name） 来删除一个用户
	# echo "The number of parameters is: ${#}" # 查看参数树木
	user_name="$1"
	
	egrep "^$user_name" /etc/passwd >& /dev/null # 判断用户是否存在
	if [ $? != 0 ]
	then
		echo "----$user_name 用户不存在啦-----------"
	else
		groups $user_name
	fi
	
}

find_users_from_file() {
# 本函数用来从文件中批量删除用户
	echo "输入含有要查找用户信息的文件名称："
	read file_name
	
	cat $file_name | while read rows; do
		str=$rows
		OLD_IFS="$IFS"
		IFS=":;"	# 重新设置区域分隔符
		arr=($str)	# 将一行字符串拆分成数组
		IFS=$OLD_IFS
		user_name=${arr[1]}
		find_one_user "$user_name" 
	done
}

#################################################################################
main(){
	echo "欢迎来到 karry 用户管理系统!!"
	choice='x'

	while [ $choice != 0 ]; do
		menu
		echo "输入你的选择！！！"
		read choice 
		case $choice in
			1)create_users_from_file;;
			2)delete_users_from_file;;
			3)change_users_from_file;;
			4)find_users_from_file;;
			0)echo "退出成功！";;
		esac
	done
}

#################################################################################

main

